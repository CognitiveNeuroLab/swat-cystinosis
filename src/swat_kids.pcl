int start;
int isi;
int pick_letter;
int pick_number;

int cur_letter = 0;
int cur_number = 0;
int cur_side = 0;
int last_letter = 100;
int last_number = 100;   
int last_side = 100;

bool red = false;

array <text> my_letter_red[8];
my_letter_red[1] = a_red;
my_letter_red[2] = e_red;
my_letter_red[3] = i_red;
my_letter_red[4] = u_red;  
my_letter_red[5] = g_red;
my_letter_red[6] = m_red;
my_letter_red[7] = k_red;
my_letter_red[8] = r_red;  


array <text> my_letter_green[8];
my_letter_green[1] = a_green;
my_letter_green[2] = e_green;
my_letter_green[3] = i_green;
my_letter_green[4] = u_green;  
my_letter_green[5] = g_green;
my_letter_green[6] = m_green;
my_letter_green[7] = k_green;
my_letter_green[8] = r_green;  

array <text> my_number_red[8];
my_number_red[1] = two_red;
my_number_red[2] = four_red;
my_number_red[3] = six_red;
my_number_red[4] = eight_red;
my_number_red[5] = seven_red;
my_number_red[6] = three_red;     
my_number_red[7] = five_red;
my_number_red[8] = nine_red;     

array <text> my_number_green[8];
my_number_green[1] = two_green;
my_number_green[2] = four_green;
my_number_green[3] = six_green;
my_number_green[4] = eight_green;
my_number_green[5] = seven_green;
my_number_green[6] = three_green;     
my_number_green[7] = five_green;
my_number_green[8] = nine_green;     

default.present();

#Waiting 1 second before we start the experiment
loop
   int juice = clock.time()
until
   clock.time() - juice > 1000
begin
end;
int count = 1;
int the_side;  
string side;
string code_cong;
string color_code;
string the_code_str;
int the_code;

loop
   start = 1
until
   start > 60
begin
   
   
   if red == false then
      red = true;
   else
      red = false;
   end;
                          
   loop
      count = 1
   until
      count > 4
   begin
      
      last_letter = cur_letter;
      last_number = cur_number;
      last_side = cur_side;
            
      #Getting Correct Letter
      loop
         bool letter_ahead = false
      until
         letter_ahead == true
      begin
         
         pick_letter = random(1,8);         
         cur_letter = pick_letter;        
               
         if last_letter != cur_letter then #We're ok
            letter_ahead = true;
         else
            letter_ahead = false;    
         end
      end;
      
      #Getting Correct Number
      loop
            bool number_ahead = false
      until
            number_ahead == true
      begin       
      
         pick_number = random(1,8);         
         cur_number = pick_number;        
               
         if last_number != cur_number then #We're ok
            number_ahead = true;
         else
            number_ahead = false;    
         end
      
      end;
      
      change.clear();   
         
      the_side = random(1,2);      
      if the_side == 1 then
         the_side = 125;   
      else
         the_side = -125;
      end;                                  
      
      cur_side = the_side;
      
      #repeat of attentional spotlight (Number on left, Letter on right)
      if last_side == cur_side && cur_side == 1 then     
         side = "1";                                       
      #repeat of attentional spotlight (Number on right, Letter on left)
      elseif last_side == cur_side && cur_side == 2 then     
         side = "2";
      #switch of attentional spotlight (Number from right to Left, Letter from left to right)
      elseif last_side != cur_side && cur_side == 1 then     
         side = "3";
      #switch of attentional spotlight (Number from left to right, Letter from right to left)
      elseif last_side != cur_side && cur_side == 2 then     
         side = "4"
      else
      end;  
      
      if red == true then
			#Letter congruent response
			#We pick a congruent response task (Vowel, Even)  
			if pick_letter < 5 && pick_number < 5 then 
				code_cong = "1";
				vis_se.set_target_button(1);
				vis_se.set_response_active(true);
			#Letter congruent no response	
			#we pick a congruent no-response task (Consonant, Odd)
			elseif pick_letter > 4 && pick_number > 4 then 
				code_cong = "2";
				vis_se.set_target_button(0);
				vis_se.set_response_active(true);
				#Letter incongruent response	
			# we pick an incongruent task (Vowel, Odd)... 
			# response depends on color (i.e. task to be performing)
			elseif pick_letter < 5 && pick_number > 4 then 
				code_cong = "3";
				
				vis_se.set_target_button(1);
				vis_se.set_response_active(true);
			#Letter incongruent no response
			# we pick an incongruent task (Consonant, Even)... 
			# response depends on color (i.e. task to be performing)else
			elseif pick_letter > 4 && pick_number < 5 then
				code_cong = "4";
				vis_se.set_target_button(0);
				vis_se.set_response_active(true);
			end;
      else
      			#Number congruent response
      	#We pick a congruent response task (Vowel, Even)  
			if pick_letter < 5 && pick_number < 5 then 
				code_cong = "5";
				vis_se.set_target_button(1);
				vis_se.set_response_active(true);
				
			#Number congruent no response	
			#we pick a congruent no-response task (Consonant, Odd)
			elseif pick_letter > 4 && pick_number > 4 then 
				code_cong = "6";
				vis_se.set_target_button(0);
				vis_se.set_response_active(true);
			
			#Number incongruent no response
			# we pick an incongruent task (Vowel, Odd)... 
			# response depends on color (i.e. task to be performing)
			elseif pick_letter < 5 && pick_number > 4 then 
				code_cong = "7";
				vis_se.set_target_button(0);
				vis_se.set_response_active(true);
			#Number incongruent response
			# we pick an incongruent task (Consonant, Even)... 
			# response depends on color (i.e. task to be performing)else
			elseif pick_letter > 4 && pick_number < 5 then
				code_cong = "8";
				vis_se.set_target_button(1);
				vis_se.set_response_active(true);
			end;
      
      end;
      
      if red == true then
         color_code = "1"; 
         the_code_str = color_code + string(count) + code_cong;
         the_code = int(the_code_str);                         
         
         the_code_str = color_code + string(count) + code_cong + side;
         
         if count == 4 then
			#	change.add_part(my_box,0,0);
            change.add_part(my_number_red[pick_number], -the_side, 0); 
            change.add_part(my_letter_red[pick_letter], the_side, 0);
            
         else
            change.add_part(my_number_red[pick_number], -the_side, 0); 
            change.add_part(my_letter_red[pick_letter], the_side, 0);
         end;
         
         change.add_part(my_cross, 0, 0);
         
         vis_se.set_event_code(the_code_str);
         vis_se.set_port_code(the_code);
         vis.present();
         
      else
         color_code = "2"; 
         the_code_str = color_code + string(count) + code_cong;   
         the_code = int(the_code_str);
         
         the_code_str = color_code + string(count) + code_cong + side;       
         
         if count == 4 then
			#	change.add_part(my_box,0,0);
            change.add_part(my_number_green[pick_number], - the_side, 0);
            change.add_part(my_letter_green[pick_letter], the_side, 0);         
         else
            change.add_part(my_number_green[pick_number], - the_side, 0);
            change.add_part(my_letter_green[pick_letter], the_side, 0);                  
         end;
         
         change.add_part(my_cross, 0, 0);                           
                                 
         vis_se.set_event_code(the_code_str);
         vis_se.set_port_code(the_code);
         vis.present();   
      end;
      
      wait_interval(1817);
     
   #   loop
   #      int start_me = clock.time()
   #   until
   #      clock.time() - start_me > 1820
   #   begin
   #   end;
      
      count = count + 1;
      start = start + 1;
      
   end;
   
   
end;
output_file ofile1 = new output_file;
ofile1.open_append( logfile.subject() + "_results_swat.txt"); 
ofile1.print( "\n Block: " );
ofile1.print( "\n Hits: " );
ofile1.print( response_manager.total_hits());

ofile1.print( "\n Misses: " );
ofile1.print( response_manager.total_misses());

ofile1.print( "\n Incorrect: " );
ofile1.print( response_manager.total_incorrects());

ofile1.print( "\n False Alarms: " );
ofile1.print( response_manager.total_false_alarms());

ofile1.print( "\n # Responses: " );
ofile1.print( response_manager.total_response_count());

ofile1.close();
  loop
		int start_me = clock.time()
	until
		clock.time() - start_me > 1000
	begin
	end;
	
